from aiogram.fsm.context import FSMContext
from aiogram.types import Message

from app.db.chat_data import initiate_chat_data
from app.db.database_manager import FeedbackRepository
from app.db.user_progress import initiate_user_progress
from app.telegram.keyboards.feedback import (
    approve_feedback_keyboard,
    cancel_feedback_keyboard,
)
from app.telegram.keyboards.menu import main_menu
from app.telegram.loader import storage
from app.telegram.states.feedback import GetFeedback


async def send_instructions(message: Message) -> None:
    """React to the Instruct command"""
    text = """
    üîé <b>–ü–æ–∏—Å–∫</b>: –ù–∞–π–¥–∏ –Ω—É–∂–Ω–æ–µ —Å–ª–æ–≤–æ –∏ –µ–≥–æ –ø–µ—Ä–µ–≤–æ–¥.\n
    üìö <b>–í—ã–±–æ—Ä –Æ–Ω–∏—Ç–∞</b>: –í—ã–±–µ—Ä–∏ –æ–±–ª–∞—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è –¥–ª—è –ö–≤–∏–∑–∞ –∏ –ü—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏—è.\n
    üß† <b>–ö–≤–∏–∑</b>: –ü—Ä–æ–≤–µ—Ä—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è, –≤—ã–±–∏—Ä–∞—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –∏ —Ä—É—Å—Å–∫–æ–º. –¢–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è!\n
    ‚úçÔ∏è <b>–ü—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏–µ</b>: –£–ª—É—á—à–∏ —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏ –ø—Ä–∞–≤–æ–ø–∏—Å–∞–Ω–∏—è —Å–ª–æ–≤ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º.\n
    üì£ <b>–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å</b>: –î–∞–π –Ω–∞–º –∑–Ω–∞—Ç—å, –∫–∞–∫ —Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –±–æ—Ç–∞!\n 
    üö´ü§ñ <b>–ü–æ–º–æ—â—å</b>: –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ /start –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞."""

    await message.reply(text=text)


async def start(message: Message) -> None:
    """React to the Start command"""

    async def clear_state(user_id: int):
        name = f"fsm:{user_id}:{user_id}:state"
        await storage.redis.getdel(name=name)

    user_id = message.from_user.id
    chat_id = message.chat.id
    await initiate_user_progress(user_id=user_id)
    await initiate_chat_data(user_id=user_id, chat_id=chat_id)
    await message.answer(text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", reply_markup=main_menu().as_markup(resize_keyboard=True))
    await clear_state(user_id=user_id)


async def init_feedback(message: Message, state: FSMContext) -> None:
    """Initialises the feedback"""
    initial_text = '–°–ø–∞—Å–∏–±–æ, —á—Ç–æ —Ä–µ—à–∏–ª –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –æ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞. –ù–∞–ø–∏—à–∏ –≤ –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ —Å–≤–æ–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—è–º'
    await message.answer(text=initial_text, reply_markup=cancel_feedback_keyboard().as_markup(resize_keyboard=True))
    await state.set_state(GetFeedback.feedback_text)


async def send_feedback(message: Message, state: FSMContext):
    await state.update_data(feedback_text=message.text)
    await message.answer(
        text='–ü–æ–¥—Ç–≤–µ—Ä–¥–∏ –æ—Ç–ø—Ä–∞–≤–∫—É –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏',
        reply_markup=approve_feedback_keyboard().as_markup(resize_keyboard=True)
    )
    await state.set_state(GetFeedback.approve)


async def approve_feedback(message: Message, state: FSMContext):
    user_data = await state.get_data()
    await FeedbackRepository.add_data({'feedback': user_data['feedback_text']})
    await message.answer(
        text='–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å!',
        reply_markup=main_menu().as_markup(resize_keyboard=True)
    )
    await state.clear()


async def cancel_feedback(message: Message, state: FSMContext):
    await message.answer(text='<i>–û–±—Ä–∞—Ç–Ω–æ –≤ –º–µ–Ω—é</i>', reply_markup=main_menu().as_markup(resize_keyboard=True))

    await state.clear()

